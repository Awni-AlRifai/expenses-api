openapi: 3.0.0
info:
  title: Your API Title
  version: 1.0.0
  description: Your API Description

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 7
        name:
          type: string
          example: "expenses"
        created_at:
          type: string
          format: date-time
          example: "2023-05-12T20:02:12.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-05-12T20:02:12.000000Z"
    CategoryInput:
      type: object
      properties:
        name:
          type: string
          example: "new category"
      required:
        - name

servers:
  - url: http://localhost:8000/api

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: password123
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: john.doe@example.com
                      created_at:
                        type: string
                        format: date-time
                        example: '2023-05-11T00:00:00.000000Z'
                      updated_at:
                        type: string
                        format: date-time
                        example: '2023-05-11T00:00:00.000000Z'
              examples:
                user:
                  value:
                    user:
                      id: 1
                      name: John Doe
                      email: john.doe@example.com
                      created_at: '2023-05-11T00:00:00.000000Z'
                      updated_at: '2023-05-11T00:00:00.000000Z'

  /auth/login:
    post:
      summary: Log in an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: password123
              required:
                - email
                - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjI1MDExZjE2Y2JmZDcxNmU1ZDMwOWJkYjNjODA3Njk2MTJiNTkyNGJlNzNlYzQ5MzNlNzVjNDZiN2E2MTA4Yzk2Mzhh
  /categories:
    
    get:
      summary: Get all categories
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    user_id:
                      type: integer
                      example: 7
                    name:
                      type: string
                      example: expenses
                    created_at:
                      type: string
                      format: date-time
                      example: '2023-05-12T20:02:12.000000Z'
                    updated_at:
                      type: string
                      format: date-time
                      example: '2023-05-12T20:02:12.000000Z'
              examples:
                categories:
                  value:
                    - id: 1
                      user_id: 7
                      name: expenses
                      created_at: '2023-05-12T20:02:12.000000Z'
                      updated_at: '2023-05-12T20:02:12.000000Z'
    post:
      summary: Create a new category
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: category_name
              required:
                - name
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      user_id:
                        type: integer
                        example: 7
                      name:
                        type: string
                        example: category_name
                      created_at:
                        type: string
                        format: date-time
                        example: '2023-05-12T20:02:12.000000Z'
                      updated_at:
                        type: string
                        format: date-time
                        example: '2023-05-12T20:02:12.000000Z'
              examples:
                category:
                  value:
                    category:
                      id: 1
                      user_id: 7
                      name: category_name
                      created_at: '2023-05-12T20:02:12.000000Z'
                      updated_at: '2023-05-12T20:02:12.000000Z'
  /categories/{id}:
    get:
      summary: Get a category by ID
      description: Returns a category with the specified ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the category to retrieve
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        404:
          description: Category not found
 
    put:
      summary: Update a category by ID
      description: Updates a category with the specified ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the category to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryInput'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        404:
          description: Category not found
 
    delete:
      summary: Delete a category by ID
      description: Deletes a category with the specified ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the category to delete
          schema:
            type: integer
      responses:
        204:
          description: No Content
        404:
          description: Category not found